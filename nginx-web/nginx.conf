# nginx-web/nginx.conf
worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 65;

    server {
        listen 80;

        location / {
            root /usr/share/nginx/html;
            index dashboard.html index.html;
            try_files $uri $uri/ /dashboard.html;
        }

        # Proxy reverso para a API Flask
        # Todas as requisições para /api/* serão encaminhadas para o serviço 'api'
        location /api/ {
            # Use o nome do serviço 'api' definido no docker-compose
            # O / no final de proxy_pass é crucial para que o caminho relativo seja preservado
            proxy_pass http://api:5000/; # Sem o /api/ aqui, pois a API deve receber o caminho como `/reports`
                                        # ou `/start-configured-tests` sem o `/api` prefixo.
                                        # Se a sua API espera `/api/reports`, então seria http://api:5000/api/
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Não use rewrite aqui a menos que você tenha certeza que a API espera um caminho diferente.
            # Se a API espera /reports quando o Nginx recebe /api/reports, então:
            # rewrite ^/api/(.*)$ /$1 break;
        }

        # Servir os relatórios HTML diretamente do subdiretório 'reports'
        # Adicione 'autoindex on;' para permitir a listagem de diretório se desejar,
        # MAS CUIDADO: isso expõe o conteúdo do diretório.
        location /reports/ {
            root /usr/share/nginx/html;
            # Para servir o diretório /reports, Nginx espera um index file (e.g. index.html)
            # ou autoindex. Se você quer servir os HTMLs diretamente,
            # sua aplicação deve chamar o nome completo do arquivo, e.g. /reports/relatory_hd-support-bne.html
            # Se a requisição é para /reports/ e ele espera um JSON, então a API deveria servir isso.
            # Se você quer permitir a listagem de arquivos, adicione:
            # autoindex on;
            # try_files $uri $uri/ =404; # Mantém isso se você quer que 404 para arquivos não encontrados
        }
    }
}